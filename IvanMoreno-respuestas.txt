1.

-----FINDLAST.JAVA-------

javac FindLast.java
java FindLast

--Vamos a compilar y ejecutar los test en FindLast

javac -cp .:../junit-4.12.jar FindLast.java
javac -cp .:../junit-4.12.jar AllTests.java
java -cp .:../junit-4.12.jar:../hamcrest-core-1.3.jar AllTests

comprobamos que el nos da un error:

There was 1 error:

1) lastOccurrenceInFirstElement(FindLastTest)java.lang.AssertionError: 
Last occurence in first element expected:<0> but was:<-1>


Como el test ha fallado Comprobamos el código de FindLast.java. En este caso
nos vamos a la funcion findLast y modificamos la condicion del if. Esto lo
hacemos porque antes no teniamos en cuenta el 0 por tanto el if nos quedará
de la siguiente manera

if(int i = x.length-1 ; i >= 0; i--)


---------------LASTZERO:JAVA--------------------

javac LastZero.java
java LastZero

javac -cp .:../junit-4.12.jar LastZero.java
javac -cp .:../junit-4.12.jar AllTests.java
java -cp .:../junit-4.12.jar:../hamcrest-core-1.3.jar AllTests


There was 1 error:
1) multipleZeroes(LastZeroTest)java.lang.AssertionError: 
Multiple zeroes: should find last one expected:<2> but was:<0>


En este caso lo que pasaba es que la condicion de tomar el ultimo 0 no la cumplía, 
se quedaba con el primer cero que encontraba, para solucionar este problema hemos
modificado la condición del if para que lea el array desde el final hasta el principio
como en el codigo de FindLast.java

for(int i = x.length -1; i >= 0; i --)

Ahora sí volvemos a pasar os test no hay ningun problema

-------------COUNTPOSITIVE.JAVA---------------

Como en los casos anteriores vemos que tenemos un fallo

There was 1 error:
1) arrayContainsZeroes(CountPositiveTest)java.lang.AssertionError:
 Array contains zeroes expected:<2> but was:<3>


Lo que nos esta diciendo en este caso es que tenemos 3 números positivos en este caso  
considera el 0 como número positivo por esa razón hacemos una pequeña modificacion en

 if (x[i] >= 0) y quitamos el igual es decir vamos a considerar que los positivos son 
mayores que cero por lo que el if seria if (x[i] > 0)


----------------------ODDORPOS.JAVA------------------

javac OddOrPos.java
java OddOrPos

javac -cp .:../junit-4.12.jar OddOrPos.java
javac -cp .:../junit-4.12.jar AllTests.java
java -cp .:../junit-4.12.jar:../hamcrest-core-1.3.jar AllTests

Encontramos un fallo en  OddOrPosTest

There was 1 error:
1) negativeOddNumbers(OddOrPosTest)java.lang.AssertionError: 
Negative odd numbers in array expected:<3> but was:<2>


Podemos ver que nos falta una condición en el if del método oddOrPos

if (x[i]%2 == 1 || x[i] > 0)

En el caso de que hagamos el modulo de -3 tendríamos un -1 de resto, esta es 
la condición que nos falta para que pase el test por tanto el if nos queda de la siguiente 
manera:

if (x[i]%2 == 1 || x[i]%2 == -1 || x[i] > 0)
